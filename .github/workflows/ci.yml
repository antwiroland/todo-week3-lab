name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: eu-central-1
  EB_APP_NAME: spring-boot-eb-demo
  S3_BUCKET_NAME: beantalk-bucket
  EB_ENVIRONMENT_NAME: spring-boot-eb-demo-env

jobs:
  # Build and test job
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and test with Maven
        run: mvn clean package

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/*.jar

  # Deployment job (only runs on main branch pushes)
  deploy:
    runs-on: ubuntu-latest
    needs: build  # This ensures deploy only runs if build succeeds
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-app
          path: target

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Prepare deployment package
        run: |
          # Create a directory for deployment
          mkdir -p deployment
          # Copy the built jar
          cp target/*.jar deployment/application.jar
          # Copy needed configuration files
          cp system.properties deployment/
          cp Procfile deployment/ 2>/dev/null || echo "No Procfile found"
          # Create zip package
          cd deployment && zip -r ../deploy.zip . && cd ..

      - name: Upload to S3
        run: |
          aws s3 cp deploy.zip s3://${{ env.S3_BUCKET_NAME }}/deploy-${{ github.sha }}.zip

      - name: Create Elastic Beanstalk version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{ env.EB_APP_NAME }} \
            --version-label ${{ github.sha }} \
            --source-bundle S3Bucket="${{ env.S3_BUCKET_NAME }}",S3Key="deploy-${{ github.sha }}.zip" \
            --description "Commit: ${{ github.sha }} - ${{ github.commit_message }}"

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --application-name ${{ env.EB_APP_NAME }} \
            --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
            --version-label ${{ github.sha }}

      - name: Verify deployment
        run: |
          # Wait for deployment to complete
          sleep 60
          # Get environment health status
          aws elasticbeanstalk describe-environments \
            --application-name ${{ env.EB_APP_NAME }} \
            --environment-names ${{ env.EB_ENVIRONMENT_NAME }} \
            --query "Environments[0].Health"