name: Deploy Spring Boot to AWS Elastic Beanstalk

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: eu-central-1
  EB_APP_NAME: 3weeklab
  S3_BUCKET_NAME: spring-boot-lab-bucket 
  EB_ENVIRONMENT_NAME: 3weeklab-env

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Create deployment package
        run: |
          # Create timestamp for versioning
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          
          # Create version label
          VERSION_LABEL="${{ github.sha }}-$TIMESTAMP"
          echo "VERSION_LABEL=$VERSION_LABEL" >> $GITHUB_ENV
          
          # Create deployment directory
          mkdir -p deployment
          
          # Copy JAR file (Maven builds in target/)
          cp target/*.jar deployment/
          
          # Copy Procfile and configs
          cp Procfile deployment/
          cp -r .ebextensions deployment/ 2>/dev/null || true
          
          # Create zip file
          cd deployment
          zip -r ../spring-boot-app-$TIMESTAMP.zip .
          cd ..
          
          # Set zip file name
          echo "ZIP_FILE=spring-boot-app-$TIMESTAMP.zip" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to S3
        run: |
          aws s3 cp $ZIP_FILE s3://${{ env.S3_BUCKET_NAME }}/deployments/$ZIP_FILE
          echo "S3_OBJECT_KEY=deployments/$ZIP_FILE" >> $GITHUB_ENV

      - name: Deploy to Elastic Beanstalk
        run: |
          # Create application version
          aws elasticbeanstalk create-application-version \
            --application-name ${{ env.EB_APP_NAME }} \
            --version-label $VERSION_LABEL \
            --source-bundle S3Bucket=${{ env.S3_BUCKET_NAME }},S3Key=$S3_OBJECT_KEY \
            --description "Spring Boot deployment - Commit: ${{ github.sha }}"
          
          sleep 5
          
          # Update environment
          aws elasticbeanstalk update-environment \
            --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
            --version-label $VERSION_LABEL

      - name: Wait for deployment
        run: |
          echo "Waiting for deployment to complete..."
          sleep 120

      - name: Check deployment status
        run: |
          aws elasticbeanstalk describe-environments \
            --environment-names ${{ env.EB_ENVIRONMENT_NAME }} \
            --query 'Environments[0].[EnvironmentName, Status, Health, VersionLabel]' \
            --output table
